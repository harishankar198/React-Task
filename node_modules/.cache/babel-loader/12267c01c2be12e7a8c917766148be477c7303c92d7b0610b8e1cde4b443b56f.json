{"ast":null,"code":"// src/api/api.js\n\nconst BASE_URL = \"https://ahd.instapract.com/web/api\";\nexport async function login(username, password) {\n  const response = await fetch(`${BASE_URL}/default/login`, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify({\n      username,\n      password\n    })\n  });\n  const data = await response.json();\n  if (!response.ok) {\n    throw new Error(data.message || \"Login failed\");\n  }\n  return data.access_token;\n}\nexport async function getDoctorList(token) {\n  const response = await fetch(`https://ahd.instapract.ae/web/api/doctor/doc-list`, {\n    headers: {\n      Authorization: `Bearer ${token}`\n    }\n  });\n  const data = await response.json();\n  if (!response.ok) {\n    throw new Error(data.message || \"Failed to fetch doctor list\");\n  }\n  return data;\n}","map":{"version":3,"names":["BASE_URL","login","username","password","response","fetch","method","headers","body","JSON","stringify","data","json","ok","Error","message","access_token","getDoctorList","token","Authorization"],"sources":["C:/Users/aswin/Desktop/React Task/my-react-task/src/api.js"],"sourcesContent":["// src/api/api.js\r\n\r\nconst BASE_URL = \"https://ahd.instapract.com/web/api\";\r\n\r\nexport async function login(username, password) {\r\n  const response = await fetch(`${BASE_URL}/default/login`, {\r\n    method: \"POST\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n    body: JSON.stringify({\r\n      username,\r\n      password,\r\n    }),\r\n  });\r\n\r\n  const data = await response.json();\r\n  if (!response.ok) {\r\n    throw new Error(data.message || \"Login failed\");\r\n  }\r\n\r\n  return data.access_token;\r\n}\r\n\r\nexport async function getDoctorList(token) {\r\n  const response = await fetch(`https://ahd.instapract.ae/web/api/doctor/doc-list`, {\r\n    headers: {\r\n      Authorization: `Bearer ${token}`,\r\n    },\r\n  });\r\n\r\n  const data = await response.json();\r\n  if (!response.ok) {\r\n    throw new Error(data.message || \"Failed to fetch doctor list\");\r\n  }\r\n\r\n  return data;\r\n}\r\n"],"mappings":"AAAA;;AAEA,MAAMA,QAAQ,GAAG,oCAAoC;AAErD,OAAO,eAAeC,KAAKA,CAACC,QAAQ,EAAEC,QAAQ,EAAE;EAC9C,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGL,QAAQ,gBAAgB,EAAE;IACxDM,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MACP,cAAc,EAAE;IAClB,CAAC;IACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;MACnBR,QAAQ;MACRC;IACF,CAAC;EACH,CAAC,CAAC;EAEF,MAAMQ,IAAI,GAAG,MAAMP,QAAQ,CAACQ,IAAI,CAAC,CAAC;EAClC,IAAI,CAACR,QAAQ,CAACS,EAAE,EAAE;IAChB,MAAM,IAAIC,KAAK,CAACH,IAAI,CAACI,OAAO,IAAI,cAAc,CAAC;EACjD;EAEA,OAAOJ,IAAI,CAACK,YAAY;AAC1B;AAEA,OAAO,eAAeC,aAAaA,CAACC,KAAK,EAAE;EACzC,MAAMd,QAAQ,GAAG,MAAMC,KAAK,CAAC,mDAAmD,EAAE;IAChFE,OAAO,EAAE;MACPY,aAAa,EAAE,UAAUD,KAAK;IAChC;EACF,CAAC,CAAC;EAEF,MAAMP,IAAI,GAAG,MAAMP,QAAQ,CAACQ,IAAI,CAAC,CAAC;EAClC,IAAI,CAACR,QAAQ,CAACS,EAAE,EAAE;IAChB,MAAM,IAAIC,KAAK,CAACH,IAAI,CAACI,OAAO,IAAI,6BAA6B,CAAC;EAChE;EAEA,OAAOJ,IAAI;AACb","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}