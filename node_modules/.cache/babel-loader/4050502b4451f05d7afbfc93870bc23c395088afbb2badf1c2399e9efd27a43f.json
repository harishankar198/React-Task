{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\aswin\\\\Desktop\\\\React Task\\\\my-react-task\\\\src\\\\pages\\\\DoctorList.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport styles from \"../styles/DoctorList.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DoctorList = () => {\n  _s();\n  const [doctors, setDoctors] = useState([]);\n  const [fullName, setFullName] = useState(\"\");\n  const token = localStorage.getItem(\"token\");\n  useEffect(() => {\n    // Get and parse patient profile\n    const profile = localStorage.getItem(\"patientProfile\");\n    if (profile) {\n      try {\n        const parsed = JSON.parse(profile);\n        const firstName = parsed.first_name || \"\";\n        const lastName = parsed.last_name || \"\";\n        const full = `${firstName} ${lastName}`.trim();\n        setFullName(full || \"User\");\n      } catch (err) {\n        console.error(\"Failed to parse patient profile:\", err);\n        setFullName(\"User\");\n      }\n    } else {\n      setFullName(\"User\");\n    }\n\n    // Fetch doctors\n    const fetchDoctors = async () => {\n      try {\n        const response = await fetch(\"https://qa-uaesaas-api.instapract.ae/web/api/doctor/doc-list\", {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n            APPID: \"Gem3s12345\",\n            Authorization: `Bearer ${token}`\n          },\n          body: JSON.stringify({})\n        });\n        const data = await response.json();\n        console.log(\"Doctors List API Response:\", data);\n        if (response.ok && Array.isArray(data.data)) {\n          setDoctors(data.data);\n        } else {\n          setDoctors([]);\n        }\n      } catch (error) {\n        console.error(\"Error fetching doctor list:\", error);\n      }\n    };\n    if (token) {\n      fetchDoctors();\n    } else {\n      console.warn(\"No token found in localStorage.\");\n    }\n  }, [token]);\n  const getProfilePic = url => {\n    if (!url) return \"https://cdn-icons-png.flaticon.com/512/387/387561.png\";\n    return url.startsWith(\"http\") ? url : `https://qa-uaesaas-api.instapract.ae${url}`;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.top - bar,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"right-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"doc-logo\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Insta\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 36\n          }, this), \"pract\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n          className: \"doc-subtitle\",\n          children: \"HealthTech IT Solution\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"left-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: getProfilePic(\"\"),\n          alt: \"User\",\n          className: \"user-profile-pic\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"user-name\",\n          children: [\"Hi, \", fullName]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"title\",\n        children: \"List of Available Doctors\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 7\n      }, this), doctors.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"no-data\",\n        children: \"No doctors found.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"doctor-list\",\n        children: doctors.map((doc, index) => {\n          var _doc$specialty, _doc$specialty$;\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"doctor-card\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"profile-section\",\n              children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                src: getProfilePic(doc.profile_pic),\n                alt: doc.name,\n                className: \"profile-pic\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 102,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"doctor-info\",\n                children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                  children: doc.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 108,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: ((_doc$specialty = doc.specialty) === null || _doc$specialty === void 0 ? void 0 : (_doc$specialty$ = _doc$specialty[0]) === null || _doc$specialty$ === void 0 ? void 0 : _doc$specialty$.name) || \"No Specialty\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 109,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 107,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"connect-button\",\n              children: \"Connect\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 112,\n              columnNumber: 15\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 13\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 4\n  }, this);\n};\n_s(DoctorList, \"+Y9lTJa1z4W12efdWqkU5z60tqE=\");\n_c = DoctorList;\nexport default DoctorList;\nvar _c;\n$RefreshReg$(_c, \"DoctorList\");","map":{"version":3,"names":["React","useEffect","useState","styles","jsxDEV","_jsxDEV","DoctorList","_s","doctors","setDoctors","fullName","setFullName","token","localStorage","getItem","profile","parsed","JSON","parse","firstName","first_name","lastName","last_name","full","trim","err","console","error","fetchDoctors","response","fetch","method","headers","APPID","Authorization","body","stringify","data","json","log","ok","Array","isArray","warn","getProfilePic","url","startsWith","children","className","top","bar","fileName","_jsxFileName","lineNumber","columnNumber","src","alt","length","map","doc","index","_doc$specialty","_doc$specialty$","profile_pic","name","specialty","_c","$RefreshReg$"],"sources":["C:/Users/aswin/Desktop/React Task/my-react-task/src/pages/DoctorList.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport styles from \"../styles/DoctorList.module.css\";\r\n\r\n\r\nconst DoctorList = () => {\r\n  const [doctors, setDoctors] = useState([]);\r\n  const [fullName, setFullName] = useState(\"\");\r\n  const token = localStorage.getItem(\"token\");\r\n\r\n  useEffect(() => { \r\n    // Get and parse patient profile\r\n    const profile = localStorage.getItem(\"patientProfile\");\r\n    if (profile) {\r\n      try {\r\n        const parsed = JSON.parse(profile);\r\n        const firstName = parsed.first_name || \"\";\r\n        const lastName = parsed.last_name || \"\";\r\n        const full = `${firstName} ${lastName}`.trim();\r\n        setFullName(full || \"User\");\r\n      } catch (err) {\r\n        console.error(\"Failed to parse patient profile:\", err);\r\n        setFullName(\"User\");\r\n      }\r\n    } else {\r\n      setFullName(\"User\");\r\n    }\r\n\r\n    // Fetch doctors\r\n    const fetchDoctors = async () => {\r\n      try {\r\n        const response = await fetch(\r\n          \"https://qa-uaesaas-api.instapract.ae/web/api/doctor/doc-list\",\r\n          {\r\n            method: \"POST\",\r\n            headers: {\r\n              \"Content-Type\": \"application/json\",\r\n              APPID: \"Gem3s12345\",\r\n              Authorization: `Bearer ${token}`,\r\n            },\r\n            body: JSON.stringify({}),\r\n          }\r\n        );\r\n\r\n        const data = await response.json();\r\n        console.log(\"Doctors List API Response:\", data);\r\n\r\n        if (response.ok && Array.isArray(data.data)) {\r\n          setDoctors(data.data);\r\n        } else {\r\n          setDoctors([]);\r\n        }\r\n      } catch (error) {\r\n        console.error(\"Error fetching doctor list:\", error);\r\n      }\r\n    };\r\n\r\n    if (token) {\r\n      fetchDoctors();\r\n    } else {\r\n      console.warn(\"No token found in localStorage.\");\r\n    }\r\n  }, [token]);\r\n\r\n  const getProfilePic = (url) => {\r\n    if (!url)\r\n      return \"https://cdn-icons-png.flaticon.com/512/387/387561.png\";\r\n    return url.startsWith(\"http\")\r\n      ? url\r\n      : `https://qa-uaesaas-api.instapract.ae${url}`;\r\n  };\r\n\r\n  return (\r\n   <div>\r\n   \r\n      \r\n      <div className={styles.top-bar}>\r\n      <div className=\"right-section\">\r\n          <h2 className=\"doc-logo\"><span>Insta</span>pract</h2>\r\n          <h5 className=\"doc-subtitle\">HealthTech IT Solution</h5>\r\n        </div>\r\n        <div className=\"left-section\">\r\n          <img\r\n            src={getProfilePic(\"\")}\r\n            alt=\"User\"\r\n            className=\"user-profile-pic\"\r\n          />\r\n          <span className=\"user-name\">Hi, {fullName}</span>\r\n        </div>\r\n\r\n       \r\n      </div>\r\n      <div className=\"container\">\r\n      <h2 className=\"title\">List of Available Doctors</h2>\r\n\r\n      {doctors.length === 0 ? (\r\n        <p className=\"no-data\">No doctors found.</p>\r\n      ) : (\r\n        <div className=\"doctor-list\">\r\n          {doctors.map((doc, index) => (\r\n            <div key={index} className=\"doctor-card\">\r\n              <div className=\"profile-section\">\r\n                <img\r\n                  src={getProfilePic(doc.profile_pic)}\r\n                  alt={doc.name}\r\n                  className=\"profile-pic\"\r\n                />\r\n                <div className=\"doctor-info\">\r\n                  <h3>{doc.name}</h3>\r\n                  <p>{doc.specialty?.[0]?.name || \"No Specialty\"}</p>\r\n                </div>\r\n              </div>\r\n              <button className=\"connect-button\">Connect</button>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      )}\r\n    </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DoctorList;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}