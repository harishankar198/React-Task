{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\aswin\\\\Desktop\\\\React Task\\\\my-react-task\\\\src\\\\LoginForm.jsx\",\n  _s = $RefreshSig$();\n// src/pages/LoginForm.jsx\nimport { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LoginForm = () => {\n  _s();\n  console.log(\"LoginForm rendered\"); // ✅ Debug render\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [error, setError] = useState(\"\");\n  const navigate = useNavigate();\n  const handleLogin = async e => {\n    e.preventDefault();\n    setError(\"\");\n    try {\n      const response = await fetch(\"https://ahd.instapract.ae/web/api/default/login\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          username,\n          password\n        })\n      });\n      const data = await response.json();\n      console.log(\"Login API response:\", data); // ✅ Debug response\n\n      if (response.ok && data.token) {\n        localStorage.setItem(\"token\", data.token);\n        console.log(\"Token saved to localStorage:\", data.token);\n        navigate(\"/doctors\");\n      } else {\n        setError(data.message || \"Login failed\");\n      }\n    } catch (err) {\n      console.error(\"Login error:\", err);\n      setError(\"Something went wrong. Please try again.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"p-4 max-w-sm mx-auto\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-xl font-bold mb-4\",\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleLogin,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Username\",\n        value: username,\n        onChange: e => setUsername(e.target.value),\n        className: \"w-full p-2 mb-2 border rounded\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        placeholder: \"Password\",\n        value: password,\n        onChange: e => setPassword(e.target.value),\n        className: \"w-full p-2 mb-2 border rounded\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"bg-blue-600 text-white px-4 py-2 rounded w-full\",\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-red-500 mt-2\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 19\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n};\n_s(LoginForm, \"8wQ/bzn6fk6ET8DFaTQ4y53Fx+Q=\", false, function () {\n  return [useNavigate];\n});\n_c = LoginForm;\nexport default LoginForm;\nvar _c;\n$RefreshReg$(_c, \"LoginForm\");","map":{"version":3,"names":["useState","useNavigate","jsxDEV","_jsxDEV","LoginForm","_s","console","log","username","setUsername","password","setPassword","error","setError","navigate","handleLogin","e","preventDefault","response","fetch","method","headers","body","JSON","stringify","data","json","ok","token","localStorage","setItem","message","err","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","placeholder","value","onChange","target","required","_c","$RefreshReg$"],"sources":["C:/Users/aswin/Desktop/React Task/my-react-task/src/LoginForm.jsx"],"sourcesContent":["// src/pages/LoginForm.jsx\r\nimport { useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nconst LoginForm = () => {\r\n  console.log(\"LoginForm rendered\"); // ✅ Debug render\r\n  const [username, setUsername] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [error, setError] = useState(\"\");\r\n  const navigate = useNavigate();\r\n\r\n  const handleLogin = async (e) => {\r\n    e.preventDefault();\r\n    setError(\"\");\r\n\r\n    try {\r\n      const response = await fetch(\"https://ahd.instapract.ae/web/api/default/login\", {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({ username, password }),\r\n      });\r\n\r\n      const data = await response.json();\r\n      console.log(\"Login API response:\", data); // ✅ Debug response\r\n\r\n      if (response.ok && data.token) {\r\n        localStorage.setItem(\"token\", data.token);\r\n        console.log(\"Token saved to localStorage:\", data.token);\r\n        navigate(\"/doctors\");\r\n      } else {\r\n        setError(data.message || \"Login failed\");\r\n      }\r\n    } catch (err) {\r\n      console.error(\"Login error:\", err);\r\n      setError(\"Something went wrong. Please try again.\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"p-4 max-w-sm mx-auto\">\r\n      <h2 className=\"text-xl font-bold mb-4\">Login</h2>\r\n      <form onSubmit={handleLogin}>\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Username\"\r\n          value={username}\r\n          onChange={(e) => setUsername(e.target.value)}\r\n          className=\"w-full p-2 mb-2 border rounded\"\r\n          required\r\n        />\r\n        <input\r\n          type=\"password\"\r\n          placeholder=\"Password\"\r\n          value={password}\r\n          onChange={(e) => setPassword(e.target.value)}\r\n          className=\"w-full p-2 mb-2 border rounded\"\r\n          required\r\n        />\r\n        <button type=\"submit\" className=\"bg-blue-600 text-white px-4 py-2 rounded w-full\">\r\n          Login\r\n        </button>\r\n        {error && <p className=\"text-red-500 mt-2\">{error}</p>}\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LoginForm;\r\n\r\n\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}