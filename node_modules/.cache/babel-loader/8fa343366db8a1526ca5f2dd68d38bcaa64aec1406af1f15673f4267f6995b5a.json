{"ast":null,"code":"// src/services/apiService.js\n\nconst BASE_URL = \"https://ahd.instapract.com/web/api\";\nexport const login = async (username, password) => {\n  try {\n    const response = await fetch(`${BASE_URL}/default/login`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        username,\n        password\n      })\n    });\n    if (!response.ok) {\n      throw new Error(\"Login failed\");\n    }\n    const data = await response.json();\n    return data.token; // Adjust based on actual token key\n  } catch (error) {\n    console.error(\"Login error:\", error);\n    throw error;\n  }\n};\nexport const getDoctorList = async token => {\n  try {\n    const response = await fetch(`https://ahd.instapract.ae/web/api/doctor/doc-list`, {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    });\n    if (!response.ok) {\n      throw new Error(\"Failed to fetch doctor list\");\n    }\n    const data = await response.json();\n    return data;\n  } catch (error) {\n    console.error(\"Fetch doctor list error:\", error);\n    throw error;\n  }\n};","map":{"version":3,"names":["BASE_URL","login","username","password","response","fetch","method","headers","body","JSON","stringify","ok","Error","data","json","token","error","console","getDoctorList","Authorization"],"sources":["C:/Users/aswin/Desktop/React Task/my-react-task/src/apiService.js"],"sourcesContent":["// src/services/apiService.js\r\n\r\nconst BASE_URL = \"https://ahd.instapract.com/web/api\";\r\n\r\nexport const login = async (username, password) => {\r\n  try {\r\n    const response = await fetch(`${BASE_URL}/default/login`, {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\"\r\n      },\r\n      body: JSON.stringify({ username, password })\r\n    });\r\n\r\n    if (!response.ok) {\r\n      throw new Error(\"Login failed\");\r\n    }\r\n\r\n    const data = await response.json();\r\n    return data.token; // Adjust based on actual token key\r\n  } catch (error) {\r\n    console.error(\"Login error:\", error);\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const getDoctorList = async (token) => {\r\n  try {\r\n    const response = await fetch(`https://ahd.instapract.ae/web/api/doctor/doc-list`, {\r\n      headers: {\r\n        Authorization: `Bearer ${token}`\r\n      }\r\n    });\r\n\r\n    if (!response.ok) {\r\n      throw new Error(\"Failed to fetch doctor list\");\r\n    }\r\n\r\n    const data = await response.json();\r\n    return data;\r\n  } catch (error) {\r\n    console.error(\"Fetch doctor list error:\", error);\r\n    throw error;\r\n  }\r\n};\r\n"],"mappings":"AAAA;;AAEA,MAAMA,QAAQ,GAAG,oCAAoC;AAErD,OAAO,MAAMC,KAAK,GAAG,MAAAA,CAAOC,QAAQ,EAAEC,QAAQ,KAAK;EACjD,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGL,QAAQ,gBAAgB,EAAE;MACxDM,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACP,cAAc,EAAE;MAClB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QAAER,QAAQ;QAAEC;MAAS,CAAC;IAC7C,CAAC,CAAC;IAEF,IAAI,CAACC,QAAQ,CAACO,EAAE,EAAE;MAChB,MAAM,IAAIC,KAAK,CAAC,cAAc,CAAC;IACjC;IAEA,MAAMC,IAAI,GAAG,MAAMT,QAAQ,CAACU,IAAI,CAAC,CAAC;IAClC,OAAOD,IAAI,CAACE,KAAK,CAAC,CAAC;EACrB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,cAAc,EAAEA,KAAK,CAAC;IACpC,MAAMA,KAAK;EACb;AACF,CAAC;AAED,OAAO,MAAME,aAAa,GAAG,MAAOH,KAAK,IAAK;EAC5C,IAAI;IACF,MAAMX,QAAQ,GAAG,MAAMC,KAAK,CAAC,mDAAmD,EAAE;MAChFE,OAAO,EAAE;QACPY,aAAa,EAAE,UAAUJ,KAAK;MAChC;IACF,CAAC,CAAC;IAEF,IAAI,CAACX,QAAQ,CAACO,EAAE,EAAE;MAChB,MAAM,IAAIC,KAAK,CAAC,6BAA6B,CAAC;IAChD;IAEA,MAAMC,IAAI,GAAG,MAAMT,QAAQ,CAACU,IAAI,CAAC,CAAC;IAClC,OAAOD,IAAI;EACb,CAAC,CAAC,OAAOG,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;IAChD,MAAMA,KAAK;EACb;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}