{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\aswin\\\\Desktop\\\\React Task\\\\my-react-task\\\\src\\\\pages\\\\DoctorList.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { fetchDoctors } from \"../lib/api\";\nimport { DEFAULT_PROFILE_PIC } from \"../lib/constants\";\nimport \"../styles/DoctorList.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DoctorList = () => {\n  _s();\n  const [doctors, setDoctors] = useState([]);\n  const [fullName, setFullName] = useState(\"\");\n  const [userProfilePic, setUserProfilePic] = useState(DEFAULT_PROFILE_PIC);\n  const token = localStorage.getItem(\"token\");\n  const getProfilePic = url => {\n    if (!url) return DEFAULT_PROFILE_PIC;\n    return url.startsWith(\"http\") ? url : `https://qa-uaesaas-api.instapract.ae${url}`;\n  };\n  useEffect(() => {\n    const profile = localStorage.getItem(\"patientProfile\");\n    if (profile) {\n      try {\n        const parsed = JSON.parse(profile);\n        const firstName = parsed.first_name || \"\";\n        const lastName = parsed.last_name || \"\";\n        setFullName(`${firstName} ${lastName}`.trim() || \"User\");\n\n        // ✅ Get the actual profile picture\n        const profilePic = parsed.profile_pic || \"\";\n        setUserProfilePic(getProfilePic(profilePic));\n      } catch (err) {\n        console.error(\"Failed to parse patient profile:\", err);\n        setFullName(\"User\");\n        setUserProfilePic(DEFAULT_PROFILE_PIC);\n      }\n    } else {\n      setFullName(\"User\");\n      setUserProfilePic(DEFAULT_PROFILE_PIC);\n    }\n    if (token) {\n      fetchDoctors(token).then(data => setDoctors(data));\n    } else {\n      console.warn(\"No token found in localStorage.\");\n    }\n  }, [token]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"top-bar\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"right-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"doc-logo\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Insta\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 13\n          }, this), \"pract\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n          className: \"doc-subtitle\",\n          children: \"HealthTech IT Solution\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"left-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: userProfilePic,\n          alt: \"User\",\n          className: \"user-profile-pic\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"user-name\",\n          children: [\"Hi, \", fullName]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n};\n_s(DoctorList, \"0kwI1m8/RF94h686UpUiGmqwnWk=\");\n_c = DoctorList;\nexport default DoctorList;\nvar _c;\n$RefreshReg$(_c, \"DoctorList\");","map":{"version":3,"names":["React","useEffect","useState","fetchDoctors","DEFAULT_PROFILE_PIC","jsxDEV","_jsxDEV","DoctorList","_s","doctors","setDoctors","fullName","setFullName","userProfilePic","setUserProfilePic","token","localStorage","getItem","getProfilePic","url","startsWith","profile","parsed","JSON","parse","firstName","first_name","lastName","last_name","trim","profilePic","profile_pic","err","console","error","then","data","warn","children","className","fileName","_jsxFileName","lineNumber","columnNumber","src","alt","_c","$RefreshReg$"],"sources":["C:/Users/aswin/Desktop/React Task/my-react-task/src/pages/DoctorList.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { fetchDoctors } from \"../lib/api\";\r\nimport { DEFAULT_PROFILE_PIC } from \"../lib/constants\";\r\nimport \"../styles/DoctorList.css\";\r\n\r\nconst DoctorList = () => {\r\n  const [doctors, setDoctors] = useState([]);\r\n  const [fullName, setFullName] = useState(\"\");\r\n  const [userProfilePic, setUserProfilePic] = useState(DEFAULT_PROFILE_PIC);\r\n\r\n  const token = localStorage.getItem(\"token\");\r\n\r\n  const getProfilePic = (url) => {\r\n    if (!url) return DEFAULT_PROFILE_PIC;\r\n    return url.startsWith(\"http\")\r\n      ? url\r\n      : `https://qa-uaesaas-api.instapract.ae${url}`;\r\n  };\r\n\r\n  useEffect(() => {\r\n    const profile = localStorage.getItem(\"patientProfile\");\r\n\r\n    if (profile) {\r\n      try {\r\n        const parsed = JSON.parse(profile);\r\n        const firstName = parsed.first_name || \"\";\r\n        const lastName = parsed.last_name || \"\";\r\n        setFullName(`${firstName} ${lastName}`.trim() || \"User\");\r\n\r\n        // ✅ Get the actual profile picture\r\n        const profilePic = parsed.profile_pic || \"\";\r\n        setUserProfilePic(getProfilePic(profilePic));\r\n      } catch (err) {\r\n        console.error(\"Failed to parse patient profile:\", err);\r\n        setFullName(\"User\");\r\n        setUserProfilePic(DEFAULT_PROFILE_PIC);\r\n      }\r\n    } else {\r\n      setFullName(\"User\");\r\n      setUserProfilePic(DEFAULT_PROFILE_PIC);\r\n    }\r\n\r\n    if (token) {\r\n      fetchDoctors(token).then((data) => setDoctors(data));\r\n    } else {\r\n      console.warn(\"No token found in localStorage.\");\r\n    }\r\n  }, [token]);\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"top-bar\">\r\n        <div className=\"right-section\">\r\n          <h2 className=\"doc-logo\">\r\n            <span>Insta</span>pract\r\n          </h2>\r\n          <h5 className=\"doc-subtitle\">HealthTech IT Solution</h5>\r\n        </div>\r\n        <div className=\"left-section\">\r\n          <img\r\n            src={userProfilePic}\r\n            alt=\"User\"\r\n            className=\"user-profile-pic\"\r\n          />\r\n          <span className=\"user-name\">Hi, {fullName}</span>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Rest of your doctor list UI */}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DoctorList;\r\n\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}