{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\aswin\\\\Desktop\\\\React Task\\\\my-react-task\\\\src\\\\DoctorList.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DoctorList = () => {\n  _s();\n  const [doctors, setDoctors] = useState([]);\n  const token = localStorage.getItem(\"token\");\n  useEffect(() => {\n    const fetchDoctors = async () => {\n      try {\n        const response = await fetch(\"https://qa-uaesaas-api.instapract.ae/web/api/doctor/doc-list\", {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n            APPID: \"Gem3s12345\",\n            Authorization: `Bearer ${token}`\n          },\n          body: JSON.stringify({}) // required even if empty for POST\n        });\n        const data = await response.json();\n        console.log(\"Doctors List API Response:\", data);\n        if (response.ok && Array.isArray(data.data)) {\n          setDoctors(data.data);\n        } else {\n          console.warn(\"No doctors found or response is not OK.\");\n          setDoctors([]);\n        }\n      } catch (error) {\n        console.error(\"Error fetching doctor list:\", error);\n      }\n    };\n    if (token) {\n      console.log(\"Fetching with token:\", token);\n      fetchDoctors();\n    } else {\n      console.warn(\"No token found in localStorage.\");\n    }\n  }, [token]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"p-6\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-2xl font-bold mb-4\",\n      children: \"Doctors List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), doctors.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"text-gray-500\",\n      children: \"No doctors found.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"min-w-full border border-gray-300 text-left\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          className: \"bg-gray-100\",\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            className: \"p-2 border\",\n            children: \"Image\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            className: \"p-2 border\",\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            className: \"p-2 border\",\n            children: \"Specialty\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: doctors.map((doc, index) => {\n          var _doc$profile_pic;\n          const name = doc.name || doc.doctor_name || doc.full_name || \"No Name\";\n          const specialtyName = Array.isArray(doc.specialty) && doc.specialty.length > 0 ? doc.specialty[0].name : \"No Specialty\";\n\n          // Build full profile image URL\n          const profilePic = (_doc$profile_pic = doc.profile_pic) !== null && _doc$profile_pic !== void 0 && _doc$profile_pic.startsWith(\"http\") ? doc.profile_pic : `https://qa-uaesaas-api.instapract.ae${doc.profile_pic || \"\"}`;\n          return /*#__PURE__*/_jsxDEV(\"tr\", {\n            className: \"border-t\",\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"p-2 border\",\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                src: profilePic || \"https://via.placeholder.com/50\",\n                alt: name,\n                onError: e => {\n                  e.target.onerror = null;\n                  e.target.src = \"https://via.placeholder.com/50\";\n                },\n                className: \"w-12 h-12 rounded-full object-cover\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 77,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"p-2 border\",\n              children: name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"p-2 border\",\n              children: specialtyName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 19\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 17\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n};\n_s(DoctorList, \"kcw5qKDPTTui1RDpe6DT6D3WwHo=\");\n_c = DoctorList;\nexport default DoctorList;\nvar _c;\n$RefreshReg$(_c, \"DoctorList\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","DoctorList","_s","doctors","setDoctors","token","localStorage","getItem","fetchDoctors","response","fetch","method","headers","APPID","Authorization","body","JSON","stringify","data","json","console","log","ok","Array","isArray","warn","error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","length","map","doc","index","_doc$profile_pic","name","doctor_name","full_name","specialtyName","specialty","profilePic","profile_pic","startsWith","src","alt","onError","e","target","onerror","_c","$RefreshReg$"],"sources":["C:/Users/aswin/Desktop/React Task/my-react-task/src/DoctorList.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\n\r\nconst DoctorList = () => {\r\n  const [doctors, setDoctors] = useState([]);\r\n  const token = localStorage.getItem(\"token\");\r\n\r\n  useEffect(() => {\r\n    const fetchDoctors = async () => {\r\n      try {\r\n        const response = await fetch(\r\n          \"https://qa-uaesaas-api.instapract.ae/web/api/doctor/doc-list\",\r\n          {\r\n            method: \"POST\",\r\n            headers: {\r\n              \"Content-Type\": \"application/json\",\r\n              APPID: \"Gem3s12345\",\r\n              Authorization: `Bearer ${token}`,\r\n            },\r\n            body: JSON.stringify({}), // required even if empty for POST\r\n          }\r\n        );\r\n\r\n        const data = await response.json();\r\n        console.log(\"Doctors List API Response:\", data);\r\n\r\n        if (response.ok && Array.isArray(data.data)) {\r\n          setDoctors(data.data);\r\n        } else {\r\n          console.warn(\"No doctors found or response is not OK.\");\r\n          setDoctors([]);\r\n        }\r\n      } catch (error) {\r\n        console.error(\"Error fetching doctor list:\", error);\r\n      }\r\n    };\r\n\r\n    if (token) {\r\n      console.log(\"Fetching with token:\", token);\r\n      fetchDoctors();\r\n    } else {\r\n      console.warn(\"No token found in localStorage.\");\r\n    }\r\n  }, [token]);\r\n\r\n  return (\r\n    <div className=\"p-6\">\r\n      <h2 className=\"text-2xl font-bold mb-4\">Doctors List</h2>\r\n\r\n      {doctors.length === 0 ? (\r\n        <p className=\"text-gray-500\">No doctors found.</p>\r\n      ) : (\r\n        <table className=\"min-w-full border border-gray-300 text-left\">\r\n          <thead>\r\n            <tr className=\"bg-gray-100\">\r\n              <th className=\"p-2 border\">Image</th>\r\n              <th className=\"p-2 border\">Name</th>\r\n              <th className=\"p-2 border\">Specialty</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {doctors.map((doc, index) => {\r\n              const name = doc.name || doc.doctor_name || doc.full_name || \"No Name\";\r\n              const specialtyName =\r\n                Array.isArray(doc.specialty) && doc.specialty.length > 0\r\n                  ? doc.specialty[0].name\r\n                  : \"No Specialty\";\r\n\r\n              // Build full profile image URL\r\n              const profilePic =\r\n                doc.profile_pic?.startsWith(\"http\")\r\n                  ? doc.profile_pic\r\n                  : `https://qa-uaesaas-api.instapract.ae${doc.profile_pic || \"\"}`;\r\n\r\n              return (\r\n                <tr key={index} className=\"border-t\">\r\n                  <td className=\"p-2 border\">\r\n                    <img\r\n                      src={profilePic || \"https://via.placeholder.com/50\"}\r\n                      alt={name}\r\n                      onError={(e) => {\r\n                        e.target.onerror = null;\r\n                        e.target.src = \"https://via.placeholder.com/50\";\r\n                      }}\r\n                      className=\"w-12 h-12 rounded-full object-cover\"\r\n                    />\r\n                  </td>\r\n                  <td className=\"p-2 border\">{name}</td>\r\n                  <td className=\"p-2 border\">{specialtyName}</td>\r\n                </tr>\r\n              );\r\n            })}\r\n          </tbody>\r\n        </table>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DoctorList;\r\n\r\n\r\n\r\n\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}