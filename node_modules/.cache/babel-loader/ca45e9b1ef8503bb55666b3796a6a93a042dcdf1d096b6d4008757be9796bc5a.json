{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\aswin\\\\Desktop\\\\React Task\\\\my-react-task\\\\src\\\\DoctorList.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DoctorList = () => {\n  _s();\n  const [doctors, setDoctors] = useState([]);\n  const [error, setError] = useState(\"\");\n  const token = localStorage.getItem(\"token\");\n  useEffect(() => {\n    const fetchDoctors = async () => {\n      try {\n        console.log(\"Fetching with token:\", token);\n        const response = await fetch(\"https://qa-uaesaas-api.instapract.ae/web/api/doctor/doc-list\", {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n            APPID: \"Gem3s12345\",\n            Authorization: `Bearer ${token}`\n          },\n          body: JSON.stringify({})\n        });\n        const data = await response.json();\n        console.log(\"Doctors List API Response:\", data);\n        if (response.ok && Array.isArray(data.data)) {\n          setDoctors(data.data);\n        } else {\n          setDoctors([]);\n          setError(data.message || \"No doctors found.\");\n        }\n      } catch (err) {\n        console.error(\"Error fetching doctor list:\", err);\n        setError(\"Failed to fetch doctor list.\");\n      }\n    };\n    if (token) {\n      fetchDoctors();\n    } else {\n      console.warn(\"No token found in localStorage.\");\n      setError(\"You must log in first.\");\n    }\n  }, [token]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"p-6\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-2xl font-bold mb-4\",\n      children: \"Doctors List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"text-red-500 mb-4\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 17\n    }, this), doctors.length === 0 && !error ? /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"text-gray-500\",\n      children: \"No doctors found.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"grid gap-4 grid-cols-1 sm:grid-cols-2 md:grid-cols-3\",\n      children: doctors.map((doc, index) => {\n        var _doc$speciality, _doc$specialty;\n        const name = doc.name || doc.doctor_name || doc.full_name || \"No Name\";\n        const specialty = ((_doc$speciality = doc.speciality) === null || _doc$speciality === void 0 ? void 0 : _doc$speciality.name) || ((_doc$specialty = doc.specialty) === null || _doc$specialty === void 0 ? void 0 : _doc$specialty.name) || \"No Speciality\";\n        const profilePic = doc.profile_pic || \"https://via.placeholder.com/100\";\n        return /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"flex items-center space-x-4 p-4 border rounded shadow bg-white\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: profilePic,\n            alt: name,\n            className: \"w-16 h-16 rounded-full object-cover\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"font-semibold text-lg\",\n              children: name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-sm text-gray-600\",\n              children: specialty\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 17\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 15\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n};\n_s(DoctorList, \"/NjzmG1IXHO4XUdExXylXdZ7hSk=\");\n_c = DoctorList;\nexport default DoctorList;\nvar _c;\n$RefreshReg$(_c, \"DoctorList\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","DoctorList","_s","doctors","setDoctors","error","setError","token","localStorage","getItem","fetchDoctors","console","log","response","fetch","method","headers","APPID","Authorization","body","JSON","stringify","data","json","ok","Array","isArray","message","err","warn","className","children","fileName","_jsxFileName","lineNumber","columnNumber","length","map","doc","index","_doc$speciality","_doc$specialty","name","doctor_name","full_name","specialty","speciality","profilePic","profile_pic","src","alt","_c","$RefreshReg$"],"sources":["C:/Users/aswin/Desktop/React Task/my-react-task/src/DoctorList.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\n\r\nconst DoctorList = () => {\r\n  const [doctors, setDoctors] = useState([]);\r\n  const [error, setError] = useState(\"\");\r\n  const token = localStorage.getItem(\"token\");\r\n\r\n  useEffect(() => {\r\n    const fetchDoctors = async () => {\r\n      try {\r\n        console.log(\"Fetching with token:\", token);\r\n\r\n        const response = await fetch(\r\n          \"https://qa-uaesaas-api.instapract.ae/web/api/doctor/doc-list\",\r\n          {\r\n            method: \"POST\",\r\n            headers: {\r\n              \"Content-Type\": \"application/json\",\r\n              APPID: \"Gem3s12345\",\r\n              Authorization: `Bearer ${token}`,\r\n            },\r\n            body: JSON.stringify({}),\r\n          }\r\n        );\r\n\r\n        const data = await response.json();\r\n        console.log(\"Doctors List API Response:\", data);\r\n\r\n        if (response.ok && Array.isArray(data.data)) {\r\n          setDoctors(data.data);\r\n        } else {\r\n          setDoctors([]);\r\n          setError(data.message || \"No doctors found.\");\r\n        }\r\n      } catch (err) {\r\n        console.error(\"Error fetching doctor list:\", err);\r\n        setError(\"Failed to fetch doctor list.\");\r\n      }\r\n    };\r\n\r\n    if (token) {\r\n      fetchDoctors();\r\n    } else {\r\n      console.warn(\"No token found in localStorage.\");\r\n      setError(\"You must log in first.\");\r\n    }\r\n  }, [token]);\r\n\r\n  return (\r\n    <div className=\"p-6\">\r\n      <h2 className=\"text-2xl font-bold mb-4\">Doctors List</h2>\r\n      {error && <p className=\"text-red-500 mb-4\">{error}</p>}\r\n      {doctors.length === 0 && !error ? (\r\n        <p className=\"text-gray-500\">No doctors found.</p>\r\n      ) : (\r\n        <ul className=\"grid gap-4 grid-cols-1 sm:grid-cols-2 md:grid-cols-3\">\r\n          {doctors.map((doc, index) => {\r\n            const name = doc.name || doc.doctor_name || doc.full_name || \"No Name\";\r\n            const specialty = doc.speciality?.name || doc.specialty?.name || \"No Speciality\";\r\n            const profilePic = doc.profile_pic || \"https://via.placeholder.com/100\";\r\n\r\n            return (\r\n              <li key={index} className=\"flex items-center space-x-4 p-4 border rounded shadow bg-white\">\r\n                <img\r\n                  src={profilePic}\r\n                  alt={name}\r\n                  className=\"w-16 h-16 rounded-full object-cover\"\r\n                />\r\n                <div>\r\n                  <p className=\"font-semibold text-lg\">{name}</p>\r\n                  <p className=\"text-sm text-gray-600\">{specialty}</p>\r\n                </div>\r\n              </li>\r\n            );\r\n          })}\r\n        </ul>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DoctorList;\r\n\r\n\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}