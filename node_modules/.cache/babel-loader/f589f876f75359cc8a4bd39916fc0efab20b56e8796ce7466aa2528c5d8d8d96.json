{"ast":null,"code":"// src/api.js\n\nimport { BASE_URL, APPID } from \"./constants\";\nexport const loginUser = async credentials => {\n  try {\n    const response = await fetch(`${BASE_URL}/api/default/login`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        APPID\n      },\n      body: JSON.stringify(credentials)\n    });\n    const result = await response.json();\n    return result;\n  } catch (error) {\n    console.error(\"Login API error:\", error);\n    return {\n      success: false,\n      msg: \"Network error. Please try again.\"\n    };\n  }\n};","map":{"version":3,"names":["BASE_URL","APPID","loginUser","credentials","response","fetch","method","headers","body","JSON","stringify","result","json","error","console","success","msg"],"sources":["C:/Users/aswin/Desktop/React Task/my-react-task/src/api.js"],"sourcesContent":["// src/api.js\r\n\r\nimport { BASE_URL, APPID } from \"./constants\";\r\n\r\nexport const loginUser = async (credentials) => {\r\n  try {\r\n    const response = await fetch(`${BASE_URL}/api/default/login`, {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        APPID,\r\n      },\r\n      body: JSON.stringify(credentials),\r\n    });\r\n\r\n    const result = await response.json();\r\n    return result;\r\n  } catch (error) {\r\n    console.error(\"Login API error:\", error);\r\n    return { success: false, msg: \"Network error. Please try again.\" };\r\n  }\r\n};\r\n"],"mappings":"AAAA;;AAEA,SAASA,QAAQ,EAAEC,KAAK,QAAQ,aAAa;AAE7C,OAAO,MAAMC,SAAS,GAAG,MAAOC,WAAW,IAAK;EAC9C,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGL,QAAQ,oBAAoB,EAAE;MAC5DM,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACP,cAAc,EAAE,kBAAkB;QAClCN;MACF,CAAC;MACDO,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACP,WAAW;IAClC,CAAC,CAAC;IAEF,MAAMQ,MAAM,GAAG,MAAMP,QAAQ,CAACQ,IAAI,CAAC,CAAC;IACpC,OAAOD,MAAM;EACf,CAAC,CAAC,OAAOE,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,kBAAkB,EAAEA,KAAK,CAAC;IACxC,OAAO;MAAEE,OAAO,EAAE,KAAK;MAAEC,GAAG,EAAE;IAAmC,CAAC;EACpE;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}